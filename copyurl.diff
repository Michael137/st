--- config.def.h	2018-05-13 03:47:35.076359105 +0100
+++ config.def.h	2018-05-13 03:48:31.453673761 +0100
@@ -178,6 +178,7 @@
 	{ TERMMOD,              XK_Y,           selpaste,       {.i =  0} },
 	{ TERMMOD,              XK_Num_Lock,    numlock,        {.i =  0} },
 	{ TERMMOD,              XK_I,           iso14755,       {.i =  0} },
+	{ MODKEY,				XK_c,			copyurl,		{.i =  0} },
 };
 
 /*
--- st.c	2018-05-13 03:51:40.929198459 +0100
+++ st.c	2018-05-13 03:57:14.677129097 +0100
@@ -204,6 +204,7 @@
 static int32_t tdefcolor(int *, int *, int);
 static void tdeftran(char);
 static void tstrsequence(uchar);
+static void tsetcolor(int, int, int, uint32_t, uint32_t);
 
 static void drawregion(int, int, int, int);
 
@@ -1601,6 +1602,17 @@
 }
 
 void
+tsetcolor( int row, int start, int end, uint32_t fg, uint32_t bg )
+{
+       int i = start;
+       for( ; i < end; ++i )
+       {
+               term.line[row][i].fg = fg;
+               term.line[row][i].bg = bg;
+       }
+}
+
+void
 csihandle(void)
 {
 	char buf[40];
@@ -2617,3 +2629,70 @@
 	tfulldirt();
 	draw();
 }
+
+/* select and copy the previous url on screen (do nothing if there's no url).
+ * known bug: doesn't handle urls that span multiple lines (wontfix)
+ * known bug: only finds first url on line (mightfix)
+ */
+void
+copyurl(const Arg *arg) {
+       /* () and [] can appear in urls, but excluding them here will reduce false
+        * positives when figuring out where a given url ends.
+        */
+       static char URLCHARS[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
+               "abcdefghijklmnopqrstuvwxyz"
+               "0123456789-._~:/?#@!$&'*+,;=%";
+
+		if(sel.oe.x >= 0 && sel.ob.x >= 0)
+	       tsetcolor( sel.nb.y, sel.ob.x, sel.oe.x + 1, defaultfg, defaultbg );
+
+       int i, row, startrow;
+       char *linestr = calloc(sizeof(char), term.col+1); /* assume ascii */
+       char *c, *match = NULL;
+
+       row = (sel.ob.x >= 0 && sel.nb.y > 0) ? sel.nb.y-1 : term.bot;
+       LIMIT(row, term.top, term.bot);
+       startrow = row;
+
+       /* find the start of the last url before selection */
+       do {
+               for (i = 0; i < term.col; ++i) {
+                       if (term.line[row][i].u > 127) /* assume ascii */
+                               continue;
+                       linestr[i] = term.line[row][i].u;
+               }
+               linestr[term.col] = '\0';
+               if ((match = strstr(linestr, "http://"))
+                               || (match = strstr(linestr, "https://")))
+                       break;
+               if (--row < term.top)
+                       row = term.bot;
+       } while (row != startrow);
+
+       if (match) {
+               /* must happen before trim */
+               selclear();
+               sel.ob.x = strlen(linestr) - strlen(match);
+
+               /* trim the rest of the line from the url match */
+               for (c = match; *c != '\0'; ++c)
+                       if (!strchr(URLCHARS, *c)) {
+                               *c = '\0';
+                               break;
+                       }
+
+               tsetcolor( row, sel.ob.x, sel.ob.x + strlen( match ), defaultbg, defaultfg );
+
+               /* select and copy */
+               sel.mode = 1;
+               sel.type = SEL_REGULAR;
+               sel.oe.x = sel.ob.x + strlen(match)-1;
+               sel.ob.y = sel.oe.y = row;
+               selnormalize();
+               tsetdirt(sel.nb.y, sel.ne.y);
+               xsetsel(getsel());
+               xclipcopy();
+       }
+
+       free(linestr);
+}
+
--- st.h	2018-05-13 03:57:49.664660772 +0100
+++ st.h	2018-05-13 03:58:09.205231789 +0100
@@ -85,6 +85,7 @@
 void printsel(const Arg *);
 void sendbreak(const Arg *);
 void toggleprinter(const Arg *);
+void copyurl(const Arg *);
 
 int tattrset(int);
 void tnew(int, int);
